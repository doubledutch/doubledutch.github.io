{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Hero","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","css","theme","colors","white","brand","primary","components_Container__WEBPACK_IMPORTED_MODULE_5__","_ref","rhythm","_ref2","PostTitle","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","transition","ease","Description","name","styles","Index","_ref5","_ref5$data","data","site","allMdx","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","headerColor","headerBg","_ref3","edges","map","_ref6","post","node","key","id","_ref4","_components_Link__WEBPACK_IMPORTED_MODULE_4__","to","frontmatter","slug","aria-label","title","excerpt","className","pageQuery"],"mappings":"+WAUMA,EAAO,kBACXC,OAAAC,EAAA,EAAAD,CAAA,WACEE,IAAKA,YAAF,WAEUC,IAAMC,OAAOC,MAFvB,2BAKaF,IAAMG,MAAMC,QALzB,yCAUHP,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CACEN,IAAGO,GAKHT,OAAAC,EAAA,EAAAD,CAAA,MACEE,IAAKA,YAAF,kEAKYQ,YAAO,IALnB,MADL,+CAYFV,OAAAC,EAAA,EAAAD,CAAA,OACEE,IAAGS,MAQHC,EAAYZ,OAAAa,EAAA,EAAAb,CAAA,MAAHc,OAAA,aAAGd,CAAH,iBACIU,YAAO,IADX,eAECP,IAAMY,WAAWC,KAFlB,iBAIFb,IAAMG,MAAMC,QAJV,eAKGJ,IAAMY,WAAWC,KALpB,MASTC,EAAcjB,OAAAa,EAAA,EAAAb,CAAA,KAAHc,OAAA,aAAGd,CAAH,CAAAkB,KAAA,UAAAC,OAAA,2IAKF,SAASC,EAATC,GAA2C,IAAAC,EAAAD,EAA1BE,KAAQC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,OAC5C,OACEzB,OAAAC,EAAA,EAAAD,CAAC0B,EAAA,EAAD,CACEF,KAAMA,EACNG,YAAaxB,IAAMC,OAAOC,MAC1BuB,SAAUzB,IAAMG,MAAMC,SAEtBP,OAAAC,EAAA,EAAAD,CAACD,EAAD,MACAC,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CACEN,IAAG2B,GAIFJ,EAAOK,MAAMC,IAAI,SAAAC,GAAA,IAASC,EAATD,EAAGE,KAAH,OAChBlC,OAAAC,EAAA,EAAAD,CAAA,OACEmC,IAAKF,EAAKG,GACVlC,IAAGmC,GAIHrC,OAAAC,EAAA,EAAAD,CAACsC,EAAA,EAAD,CACEC,GAAIN,EAAKO,YAAYC,KACrBC,aAAA,QAAoBT,EAAKO,YAAYG,OAErC3C,OAAAC,EAAA,EAAAD,CAACY,EAAD,KAAYqB,EAAKO,YAAYG,QAE/B3C,OAAAC,EAAA,EAAAD,CAACiB,EAAD,KACGgB,EAAKW,QAAS,IACf5C,OAAAC,EAAA,EAAAD,CAACsC,EAAA,EAAD,CACEC,GAAIN,EAAKO,YAAYC,KACrBC,aAAA,QAAoBT,EAAKO,YAAYG,OAFvC,mBAOF3C,OAAAC,EAAA,EAAAD,CAAA,gBAGJA,OAAAC,EAAA,EAAAD,CAACsC,EAAA,EAAD,CACEC,GAAG,QACHG,aAAW,kBACXG,UAAU,oBAHZ,qBAOA7C,OAAAC,EAAA,EAAAD,CAAA,aAMD,IAAM8C,EAAS","file":"component---src-pages-index-js-376c932b493f099a761c.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport Layout from '../components/Layout'\nimport Link from '../components/Link'\nimport Container from 'components/Container'\nimport { rhythm } from '../lib/typography'\nimport theme from '../../config/theme'\n\nconst Hero = () => (\n  <section\n    css={css`\n      * {\n        color: ${theme.colors.white};\n      }\n      width: 100%;\n      background: ${theme.brand.primary};\n      padding: 20px 0 30px 0;\n      display: flex;\n    `}\n  >\n    <Container\n      css={css`\n        display: flex;\n        flex-direction: column;\n      `}\n    >\n      <h1\n        css={css`\n          position: relative;\n          z-index: 5;\n          line-height: 1.5;\n          margin: 0;\n          max-width: ${rhythm(15)};\n        `}\n      >\n        Your blog says the things you want to say.\n      </h1>\n    </Container>\n    <div\n      css={css`\n        height: 150px;\n        overflow: hidden;\n      `}\n    />\n  </section>\n)\n\nconst PostTitle = styled.h2`\n  margin-bottom: ${rhythm(0.3)};\n  transition: ${theme.transition.ease};\n  :hover {\n    color: ${theme.brand.primary};\n    transition: ${theme.transition.ease};\n  }\n`\n\nconst Description = styled.p`\n  margin-bottom: 10px;\n  display: inline-block;\n`\n\nexport default function Index({ data: { site, allMdx } }) {\n  return (\n    <Layout\n      site={site}\n      headerColor={theme.colors.white}\n      headerBg={theme.brand.primary}\n    >\n      <Hero />\n      <Container\n        css={css`\n          padding-bottom: 0;\n        `}\n      >\n        {allMdx.edges.map(({ node: post }) => (\n          <div\n            key={post.id}\n            css={css`\n              margin-bottom: 40px;\n            `}\n          >\n            <Link\n              to={post.frontmatter.slug}\n              aria-label={`View ${post.frontmatter.title}`}\n            >\n              <PostTitle>{post.frontmatter.title}</PostTitle>\n            </Link>\n            <Description>\n              {post.excerpt}{' '}\n              <Link\n                to={post.frontmatter.slug}\n                aria-label={`View ${post.frontmatter.title}`}\n              >\n                Read Article â†’\n              </Link>\n            </Description>\n            <span />\n          </div>\n        ))}\n        <Link\n          to=\"/blog\"\n          aria-label=\"Visit blog page\"\n          className=\"button-secondary\"\n        >\n          View all articles\n        </Link>\n        <hr />\n      </Container>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      ...site\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { ne: false } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 190)\n          id\n          fields {\n            title\n            slug\n            date\n          }\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            banner {\n              childImageSharp {\n                sizes(maxWidth: 720) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n            slug\n            keywords\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}