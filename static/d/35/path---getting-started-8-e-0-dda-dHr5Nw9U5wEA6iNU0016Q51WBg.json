{"data":{"site":{"siteMetadata":{"title":"DoubleDutch Developer Platform","description":"Information for building on the DoubleDutch platform","author":{"name":"DoubleDutch"},"keywords":["DoubleDutch","Developer Platform"]}},"mdx":{"frontmatter":{"title":"Publishing and Installing Extensions","date":"September 22, 2017","author":"Adam Liechty","banner":null,"slug":"publishing-installing","keywords":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Publishing your DoubleDutch extension`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Once you have finished development, you will need to be provisioned for a DoubleDutch developer account\nbefore you can publish and install the extension in an event app. To request your developer credentials,\nplease submit a request `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://developer.doubledutch.me/hc/en-us/requests/new\"\n      }\n    }, `here`), `.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Next, use your developer credentials to authenticate via the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `doubledutch`), ` command line tools:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-bash\"\n      }\n    }, `doubledutch login\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `You may now publish your extension to DoubleDutch`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-bash\"\n      }\n    }, `doubledutch publish\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `To update an extension you have already published, first update the version number in the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `package.json`), `\nfile at the root folder of your project. Then, updating an extension is as simple as publishing again.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Installing your extension to an event in a DoubleDutch event app`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `An Event Manager in the DoubleDutch CMS can install published extensions via the \"Discover More\" page in the CMS.\nMany extensions are public and appear for all CMS users. Any non-public extension can be installed with the exact\npublished name of the extension (case-sensitive):`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Visit the \"Discover More\" page in the DoubleDutch CMS`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Click the \"Custom DDDP extension\" tile at the bottom of the page and click the \"Add Custom\" button.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Enter the exact published extension name, hit `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `enter`), `, and refresh the page.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Click \"Install Now\" on the new extension tile that appears.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `The extension will be installed to the current event in the DoubleDutch CMS and saved as a tile in your personal\n\"Discover More\" page for later access.`)));\n  }\n\n}"}}},"pageContext":{"id":"1807ec18-0faa-5179-8124-fdb976e12842","prev":{"id":"cd888d1f-de80-5890-a32e-e3ff0dde268e","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"Getting started A web view can be embedded in any DoubleDutch event app via the DoubleDutch CMS. Layout > Add New Section > Web View Insert the URL of the web page to load. HTTPS is preferred. It can be an existing web page such as a\n Twitter feedâ€¦","fields":{"title":"Web View Sections in a DoubleDutch event app","slug":"web-views","date":"2017-09-23T00:00:00.000Z","redirects":["/webview"]},"code":{"scope":""}},"next":null}}