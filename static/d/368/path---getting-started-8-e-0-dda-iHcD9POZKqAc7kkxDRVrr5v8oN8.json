{"data":{"site":{"siteMetadata":{"title":"DoubleDutch Developer Platform","description":"Information for building on the DoubleDutch platform","author":{"name":"DoubleDutch"},"keywords":["DoubleDutch","Developer Platform"]}},"mdx":{"frontmatter":{"title":"Getting Started with DDDP","date":"January 02, 2019","author":"Adam Liechty","banner":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='400' height='264' viewBox='0 0 400 264' version='1'%3e%3cpath d='M194 2h-2c-1 0-3 4-2 5l-2 4c-3 4-4 8-4 15l-1 8c-2 2-2 3-1 10 2 12 2 22 1 23l-7-3c-16-10-31-11-39-2-8 7-10 26-7 46l2 9-8 3c-32 11-45 29-36 46 6 8 20 18 35 23l9 4-1 8c-3 14-2 34 1 40a1506 1506 0 0 0-53 3c-50 2-49 2-45-3 3-4 3-7-1-10-2-2-2-3-1-4 2-2 2-4 1-6-2-3-6-3-8-1s-3 2-3-4c0-4 1-5 3-8 4-4 1-10-5-8-3 1-4 6-1 8s3 4-1 3c-2-1-3-1-5 1-4 3-1 8 4 8 3 0 3 0 4 2l5 6c4 3 4 3 2 4-2 0-2 1-2 2v2c-2 0 1 4 3 5 2 0 2 2 0 2l-2 2-13 3c-14 1-17 2-11 5 2 1 2 1 0 1-3 0-3 2-1 3 25 9 371 9 396 0 2-1 2-3-1-3-2 0-2 0 1-2 3-1 4-3 2-3l-15-2h-3l2-3c3-4 3-7-1-10-3-2-3-2-1-4 2-1 3-5 1-7-3-2-5-2-7 0s-3 3-3 1c-2-3 0-11 2-13 3-1 3-5 0-7-2-2-4-3-4-1l-1 1c-1-1-3 1-3 4l2 3c3 2 3 4 0 3-4-2-9 3-7 7 1 2 2 2 5 2 4-1 4-1 4 2 1 2 2 4 5 6s4 3 2 4c-4 2-2 9 2 9 2 0 2 0 1 2h-15l-35-2h-22l-2-4c-2-3-3-4-5-4-3 0-5-2-5-3l2-1c3 0 8-4 8-6s0-2-2-1h-2l2-2 2-3-2-2-4-2c-2 0-2-1 2-3 6-4 10-9 11-14 1-3 1-3 3-2 8 6 17-5 10-12-3-3-8-3-11 0l-2 2v-3l1-3c3 0 6-5 6-8 0-4-4-8-5-5-1 1-1 0-1-1 0-2 0-2-3-2-7 2-9 9-5 14l4 2c2 0 3 16 1 21-1 2-1 2-2 1-1-5-9-10-9-6h-1c-1-2-6 3-6 6s2 7 4 8c3 0 2 2-2 4-7 4-7 10-1 18l2 3c0 1-5 3-8 3-2 0-2 1-2 2 0 2-1 2-13 2h-13l2-6c3-7 3-28 1-38l-2-7 8-3c27-9 42-25 38-40-3-10-21-23-40-30l-6-2 2-9c2-12 1-30-2-38-7-17-25-19-47-4-5 3-6 1-4-10 2-17 2-22 0-23-1-1-2-2-2-6 0-5-3-13-5-15l-2-4c0-5-5-8-8-6m43 63l-11 5c-7 3-7 3-5 5l7 14a398 398 0 0 0 8 21c-2 1 5 3 10 3l4 1c0 2 3 1 3-1 3-10 4-30 2-38-3-9-9-12-18-10m-93 2c-4 3-5 8-6 19 0 10 1 23 3 28h4l7-1 9-3h-1v-3l3-7 10-23c3-4 3-3-6-8-9-4-19-5-23-2m40 17l-10 21 3-3 8-9c5-6 5-8 2-10-1-1-2-1-3 1m22 0l-2 3 5 6a332 332 0 0 1 15 18l-5-11c-8-19-9-20-13-16m-16 17l-6 8 13 1 13-1-13-15-7 7m-7 18h-7l-6 10-10 18-4 8 5 10 11 18 5 8h40l2-3 17-28 2-6-4-8-10-17-6-10h-35m-32 3l-7 2 7 19 11-20c-3-2-6-2-11-1m83 1l-2 1 11 19 7-18c0-2-12-4-16-2m-105 5c-23 8-36 19-35 29 1 5 11 14 21 19l19 8a646 646 0 0 0 10-25l2-4-3-8a243 243 0 0 1-8-21l-6 2m126 10l-5 14c-2 2-1 3 2 11l6 14c2 7 2 7 14 2 15-6 26-15 28-23 1-8-13-20-33-27-8-3-7-3-12 9m-67-1c-11 6-14 19-7 29 10 13 31 9 35-6 4-16-13-30-28-23m-39 33l-5 16c1 1 19 4 20 3l-3-5-6-11-4-7-2 4m93-2l-7 11-5 10 21-3-8-20-1 2m-101 29c-5 18-4 40 3 46 7 5 22 1 39-13l8-6-3-4-10-13c-5-6-7-8-9-8l-25-4c-2 0-3 0-3 2m104-1l-13 2-9 1-4 6a275 275 0 0 1-14 19l8 7c10 8 20 13 28 14 6 0 6 0 9-3l5-9c2-6 2-22 0-31-1-8-2-8-10-6m-61 5l13 15 13-15-13-1-13 1m6 35l-7 6h15c14 0 14 0 12-2l-7-6-5-4-8 6' fill='lightgray' fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.5136612021857923,"src":"/static/030bd837f249bef02037f3c1cb03837c/589d4/banner.png","srcSet":"/static/030bd837f249bef02037f3c1cb03837c/6d8d0/banner.png 225w,\n/static/030bd837f249bef02037f3c1cb03837c/e3de9/banner.png 450w,\n/static/030bd837f249bef02037f3c1cb03837c/589d4/banner.png 900w,\n/static/030bd837f249bef02037f3c1cb03837c/3a933/banner.png 1108w","srcWebp":"/static/030bd837f249bef02037f3c1cb03837c/6d1c7/banner.webp","srcSetWebp":"/static/030bd837f249bef02037f3c1cb03837c/a2f97/banner.webp 225w,\n/static/030bd837f249bef02037f3c1cb03837c/990f6/banner.webp 450w,\n/static/030bd837f249bef02037f3c1cb03837c/6d1c7/banner.webp 900w,\n/static/030bd837f249bef02037f3c1cb03837c/6ad3e/banner.webp 1108w","sizes":"(max-width: 900px) 100vw, 900px"}}},"slug":"getting-started","keywords":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `See this `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"./faq\"\n      }\n    }, `FAQ for non-engineers`), `.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The DoubleDutch Developer Platform supports developing standalone extensions that can be hosted\nwithin a DoubleDutch mobile app. Extensions are written in Javascript using the React Native\nframework.`), React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Developer videos`), React.createElement(YouTube, {\n      title: \"Getting started\",\n      videoId: \"tz0Fx0YQvS0\"\n    }), React.createElement(YouTube, {\n      title: \"Using the rn-client library\",\n      videoId: \"LrdQl9G8jYo\"\n    }), React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Developer Environment`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The developer environment is currently limited to run on a Mac, though you can perform React Native\ndevelopment on other platforms that can easily be moved into a DoubleDutch extension at a later point.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `You do not need to have a DoubleDutch developer account in order to start developing a new extension.\nDoubleDutch extensions can be written and tested locally in the iOS or Android simulator without any\nprior contact with DoubleDutch Engineering.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Prerequisites`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://nodejs.org\"\n      }\n    }, `NodeJS`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://yarnpkg.com/en/docs/install\"\n      }\n    }, `Yarn`), ` (`, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `brew install yarn`), `)`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"http://brewformulas.org/Watchman\"\n      }\n    }, `Watchman`), ` (`, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `brew install watchman`), `)`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://developer.apple.com/xcode/\"\n      }\n    }, `XCode`), ` (to run in iOS simulator). If you have not used XCode before, be sure to open it once to\naccept the EULA and allow it to install the command line developer tools, or simply run `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `sudo xcodebuild -license accept`), `\nfrom the command line.`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Getting Started`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Install the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `doubledutch`), ` `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/cli\"\n      }\n    }, `command line tools`))), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {}\n    }, `npm i -g @doubledutch/cli\n`)), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components,\n      props: {\n        \"start\": 2\n      }\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Create an empty folder for your project and initialize it.`)), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {}\n    }, `cd ~/code/project\ndoubledutch init\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This will populate that folder with a functioning React Native project setup to run as an extension\nwithin the DoubleDutch mobile app. By default the name of the extension will match the current folder\nname. In the example above, you can find the Javascript files for your project in\n`, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `~/code/project/mobile/src/`), `. The file `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `home-view.js`), ` is the root of your extension and has been\ninitialized with a simple \"To do\" style sample extension. This sample extension provides examples of\nusing useful DoubleDutch libraries such as `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/rn-client\"\n      }\n    }, `@doubledutch/rn-client`), ` (used by all DoubleDutch extensions\nbuilt with React Native) and `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/firebase-connector\"\n      }\n    }, `@doubledutch/firebase-connector`), ` (optional integration with Google Cloud\nPlatform's Firebase suite for easy backend development).`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components,\n      props: {\n        \"start\": 3\n      }\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Run the sample code in the simulator`)), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {}\n    }, `cd ~/code/project/mobile\nnpm run ios\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The Javascript packager will take a couple minutes to initialize the first time. After that, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `⌘ R`), ` in the\nsimulator will quickly hot reload your changes.`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components,\n      props: {\n        \"start\": 4\n      }\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Make edits to the code in your favorite editor. `, React.createElement(Link, {\n      to: \"https://code.visualstudio.com/\"\n    }, React.createElement(InlineImage, {\n      src: \"./code.ico\"\n    }))), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Hit `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `⌘ R`), ` in the simulator to refresh.  `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `⌘ D`), ` for debugging with Chrome developer tools.`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Interacting with the DoubleDutch mobile app`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The sample extension that is created for you when you run `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `doubledutch init`), ` uses the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/rn-client\"\n      }\n    }, `@doubledutch/rn-client`), `\nlibrary, which serves as a bridge between your extension and the mobile app it is hosted within.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `import client, { Avatar, TitleBar } from '@doubledutch/rn-client'\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This bridge allows you to access key information about the current event in the mobile app as well as the\nattendee that is logged in:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `console.log(client.currentUser)\nconsole.log(client.currentEvent)\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `In the simulator, mock data is provided for local development.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Need a backend for your extension?`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/firebase-connector\"\n      }\n    }, `@doubledutch/firebase-connector`), ` provides optional integration with Google Cloud Platform's Firebase suite\nfor easy backend development. The default configuration provides access to realtime database references\nin an environment managed by DoubleDutch. Each event's data is sandboxed, and `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/firebase-connector\"\n      }\n    }, `@doubledutch/firebase-connector`), `\nprovides database references that have various combinations of access control for attendees and event managers.\nSee `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/firebase-connector\"\n      }\n    }, `@doubledutch/firebase-connector`), ` for more details.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Publishing your DoubleDutch extension`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Once you have finished development, you will need to be provisioned for a DoubleDutch developer account\nbefore you can publish and install the extension in an event app. To request your developer credentials,\nplease submit a request `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://developer.doubledutch.me/hc/en-us/requests/new\"\n      }\n    }, `here`), `.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Next, use your developer credentials to authenticate via the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `doubledutch`), ` command line tools:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-bash\"\n      }\n    }, `doubledutch login\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `You may now publish your extension to DoubleDutch`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-bash\"\n      }\n    }, `doubledutch publish\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `To update an extension you have already published, first update the version number in the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `package.json`), `\nfile at the root folder of your project. Then, updating an extension is as simple as publishing again.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Installing your extension to an event in a DoubleDutch event app`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `An Event Manager in the DoubleDutch CMS can install published extensions via the \"Discover More\" page in the CMS.\nMany extensions are public and appear for all CMS users. Any non-public extension can be installed with the exact\npublished name of the extension (case-sensitive):`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Visit the \"Discover More\" page in the DoubleDutch CMS`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Click the \"Custom DDDP extension\" tile at the bottom of the page and click the \"Add Custom\" button.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Enter the exact published extension name.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `The extension will be installed to the current event in the DoubleDutch CMS and saved as a tile in your personal\n\"Discover More\" page for later access.`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Reference`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `See documentation for various DoubleDutch platform components:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/rn-client\"\n      }\n    }, `@doubledutch/rn-client`), `.  DoubleDutch React Native client`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/firebase-connector\"\n      }\n    }, `@doubledutch/firebase-connector`), `.  Easy realtime backend for your extension`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/@doubledutch/cli\"\n      }\n    }, `@doubledutch/cli`), `.  DoubleDutch developer command line interface`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This exists to populate GraphQL fields and avoid null errors. It should contain all of the available frontmatter.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Fusce ac urna egestas mi ornare rutrum. Ut fringilla, mauris\nnon vulputate luctus, nunc tortor tempus nunc, ut tincidunt mi\nmagna id nulla. Nunc id `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `convallis metus`), `. Pellentesque at laoreet\nex. Vestibulum hendrerit, nibh eget `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/\"\n      }\n    }, `tristique finibus`), `, nibh eros\ncursus lacus, eget semper nisi libero eu libero.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Integer condimentum `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `aliquam massa`), `, id aliquet ante ullamcorper at.\nMauris nibh mi, eleifend nec venenatis et, mattis et felis. Etiam\nfringilla libero sit amet tortor congue, et `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"em\"\n    }, `tempor tortor`)), ` ullamcorper.\nPhasellus pretium pharetra tortor.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-jsx\"\n      }\n    }, `// footer.jsx\nimport React from 'react'\n\nconst Footer = () => (\n  // highlight-next-line\n  <Wrapper data-testid=\"footer\">\n    Copyright {\\`©\\`} {new Date().getFullYear()}\n  </Wrapper>\n)\n\ndefault Footer\n\n// Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse potenti.\n`)), React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Praesent sollicitudin finibus rhoncus.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse potenti.\nVivamus accumsan leo enim, ut elementum magna ultricies at. Curabitur dictum,\nlibero vitae tempus gravida, justo nibh accumsan libero, rutrum iaculis nisi sem\nat est. Vestibulum egestas tellus et lectus volutpat, at tristique justo malesuada.\nPhasellus velit tellus, dictum nec rhoncus et, blandit vehicula arcu.`), React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `“This is a quote. Lorem ipsum dolor sit amet.”`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Vivamus non eros sit amet sem venenatis porta. Nulla eu massa non ante vestibulum\naliquam quis sed nisi. Quisque massa risus, vulputate a ullamcorper eget, semper ac\norci. Aenean arcu massa, consectetur sed arcu id, consequat ullamcorper nisi. Sed sit\namet semper turpis, sit amet tincidunt felis. Etiam eu mollis augue, maximus iaculis\nlectus. Morbi sit amet sem a est rhoncus aliquam. Pellentesque nibh libero, pellentesque\nut leo et, scelerisque interdum augue.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(\"a\", {\n      className: \"gatsby-resp-image-link\",\n      href: \"/static/6d20374edec152779386e6f231d73b71/1025e/example.png\",\n      style: {\n        \"display\": \"block\"\n      },\n      target: \"_blank\",\n      rel: \"noopener\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"975px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"72%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }, React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px #fafafa\"\n      },\n      alt: \"Example\",\n      title: \"\",\n      src: \"/static/6d20374edec152779386e6f231d73b71/1025e/example.png\",\n      srcSet: \"/static/6d20374edec152779386e6f231d73b71/43a79/example.png 259w,\\n/static/6d20374edec152779386e6f231d73b71/e3988/example.png 518w,\\n/static/6d20374edec152779386e6f231d73b71/1025e/example.png 975w\",\n      sizes: \"(max-width: 975px) 100vw, 975px\"\n    }))))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Lorem ipsum dolor sit amet`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Aenean fringilla sapien vitae maximus lobortis. Vivamus luctus purus nisi. Aenean quis\nipsum turpis. Ut ut rutrum orci. Duis in mi lacus. Nullam rhoncus at nulla eu aliquam.\nCurabitur vitae augue justo.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-css\"\n      }\n    }, `/* styles.css */\na {\n  cursor: pointer;\n  text-decoration: none;\n  color: blue;\n  &:hover {\n    text-decoration: underline;\n    text-decoration-color: #c4c4c4;\n    outline: none;\n  }\n}\n`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Nullam rhoncus`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Lorem ipsum`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Dolor sit amet`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Duis in mi lacus`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Integer sed sapien sed arcu faucibus dictum. Duis scelerisque\nbibendum viverra. Donec sodales fringilla sapien vitae tempor.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Duis scelerisque`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Lorem ipsum`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Dolor sit amet`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Duis in mi lacus`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Quisque massa risus, vulputate a ullamcorper eget, semper ac\norci. Aenean arcu massa, consectetur sed arcu id, consequat ullamcorper nisi. Sed sit\namet semper turpis, sit amet tincidunt felis.`));\n  }\n\n}"}}},"pageContext":{"id":"36297b02-41af-5a4f-94e1-57eecfe97eb0","prev":null,"next":{"id":"66bf1a17-52f0-53b3-9374-4b71ca9478d4","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"What is the DoubleDutch Developer Platform (DDDP)? DDDP allows DoubleDutch customers and 3rd party developers to build extensions that can be installed\nto any DoubleDutch event app. What is an extension? An extension is a self-contained experience…","fields":{"title":"Frequently Asked Questions","slug":"faq","date":"2019-01-01T00:00:00.000Z","redirects":null},"code":{"scope":""}}}}