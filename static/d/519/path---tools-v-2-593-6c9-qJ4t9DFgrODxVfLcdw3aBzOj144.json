{"data":{"site":{"siteMetadata":{"title":"DoubleDutch Developer Platform","description":"Information for building on the DoubleDutch platform","author":{"name":"DoubleDutch"},"keywords":["DoubleDutch","Developer Platform"]}},"mdx":{"frontmatter":{"title":"DDDP Version 2.0 Released","date":"March 20, 2019","author":"Adam Liechty","banner":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='400' height='254' viewBox='0 0 400 254' version='1'%3e%3cpath d='M0 1v127l1 126h257v-55c0-62-1-61 8-66l4-2 40-1c42 0 45 0 50 4 6 5 6 4 6 65v55h16l18-1 1-127V0H201L0 1m0 126' fill='lightgray' fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.5757575757575757,"src":"/static/0d6d7cc30894b14d9836e31d97eb7a31/589d4/banner.png","srcSet":"/static/0d6d7cc30894b14d9836e31d97eb7a31/6d8d0/banner.png 225w,\n/static/0d6d7cc30894b14d9836e31d97eb7a31/e3de9/banner.png 450w,\n/static/0d6d7cc30894b14d9836e31d97eb7a31/589d4/banner.png 900w,\n/static/0d6d7cc30894b14d9836e31d97eb7a31/ee4f6/banner.png 988w","srcWebp":"/static/0d6d7cc30894b14d9836e31d97eb7a31/6d1c7/banner.webp","srcSetWebp":"/static/0d6d7cc30894b14d9836e31d97eb7a31/a2f97/banner.webp 225w,\n/static/0d6d7cc30894b14d9836e31d97eb7a31/990f6/banner.webp 450w,\n/static/0d6d7cc30894b14d9836e31d97eb7a31/6d1c7/banner.webp 900w,\n/static/0d6d7cc30894b14d9836e31d97eb7a31/c2a71/banner.webp 988w","sizes":"(max-width: 900px) 100vw, 900px"}}},"slug":"tools-v2","keywords":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `We are excited to announce version 2.0 of the DoubleDutch Developer Platform!`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `We've made some improvements to the development tools and process, which will speed your development\ntime.`), React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Getting started`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `npm i -g @doubledutch/cli@latest`), ` to get the latest `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `doubledutch`), ` command-line interface.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Set up the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://github.com/doubledutch/simulator\"\n      }\n    }, `DoubleDutch simulator`), ` app for either iOS\nor Android.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Use `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `doubledutch init`), ` to clone a sample project and get started.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Launch the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `mobile`), ` and/or `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `web/admin`), ` folder projects with `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `npm start`), ` to run locally.`)), React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Major changes`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The version 2.0 tools make several important changes.`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Your extension code base no longer needs iOS and Android project files. You can develop multiple\nDoubleDutch extensions with the same\n`, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://github.com/doubledutch/simulator\"\n      }\n    }, `DoubleDutch Simulator`), ` app.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Built on React Native 0.59, which includes many feature, stability, and security enhancements.`)), React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Upgrading from version 1`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `To upgrade from the DDDP v1 tools:`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `npm i -g @doubledutch/cli@latest`), ` to get the latest `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `doubledutch`), ` command-line interface.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Set up the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://github.com/doubledutch/simulator\"\n      }\n    }, `DoubleDutch simulator`), ` app for either iOS\nor Android.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Update your existing DDDP extension with `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `doubledutch upgrade-rn`), `.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Launch the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `mobile`), ` and/or `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `web/admin`), ` folder projects with `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `npm start`), ` to run locally.`)));\n  }\n\n}"}}},"pageContext":{"id":"3bcb5577-6b92-5be5-83e5-0629f50fe31a","prev":{"id":"ba58b2de-0fa8-52d4-b228-41e550202758","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"This article was updated on March 20, 2019 due to the  release of the DoubleDutch Developer Platform v2.0 tools See this  FAQ for non-engineers . The DoubleDutch Developer Platform supports developing standalone extensions that can be hosted\nwithin a…","fields":{"title":"Getting Started with DDDP","slug":"getting-started","date":"2019-01-02T00:00:00.000Z","redirects":["/rn","/rn/"]},"code":{"scope":""}},"next":{"id":"395f76e0-4dc5-52eb-85c8-0bebc18c11f6","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"What is the DoubleDutch Developer Platform (DDDP)? DDDP allows DoubleDutch customers and 3rd party developers to build extensions that can be installed\nto any DoubleDutch event app. What is an extension? An extension is a self-contained experience…","fields":{"title":"Frequently Asked Questions","slug":"faq","date":"2019-01-01T00:00:00.000Z","redirects":null},"code":{"scope":""}}}}