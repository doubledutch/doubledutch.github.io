{"data":{"site":{"siteMetadata":{"title":"DoubleDutch Develper Platform","description":"Information for building on the DoubleDutch platform","author":{"name":"DoubleDutch"},"keywords":["DoubleDutch","Developer Platform"]}},"mdx":{"frontmatter":{"title":"Getting Started","date":"January 01, 2019","author":"Adam Liechty","banner":null,"slug":"rn","keywords":["react native"]},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This exists to populate GraphQL fields and avoid null errors. It should contain all of the available frontmatter.`));\n  }\n\n}"}}},"pageContext":{"id":"26f82a35-8f54-5311-84f7-f484aaa118fc","prev":{"id":"66bf1a17-52f0-53b3-9374-4b71ca9478d4","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"What is the DoubleDutch Developer Platform (DDDP)? DDDP allows DoubleDutch customers and 3rd party developers to build extensions that can be installed\nto any DoubleDutch event app. What is an extension? An extension is a self-contained experience…","fields":{"title":"Frequently Asked Questions","slug":"faq","date":"2019-01-01T00:00:00.000Z"},"code":{"scope":""}},"next":{"id":"ab069f25-8a50-5e86-a511-741a5a5f2187","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"Getting started Custom pages Redirect with context This exists to populate GraphQL fields and avoid null errors. It should contain all of the available frontmatter. Fusce ac urna egestas mi ornare rutrum. Ut fringilla, mauris\nnon vulputate luctus…","fields":{"title":"Web View Sections in a DoubleDutch event app","slug":"webview","date":"2018-12-31T00:00:00.000Z"},"code":{"scope":""}}}}